{"version":3,"sources":["webpack:///./src/templates/author.tsx"],"names":["HiddenMobile","AuthorHeader","AuthorMeta","AuthorSocialLink","AuthorBio","AuthHeaderContent","AuthorProfileBioImage","AuthorSocialLinkAnchor","Author","data","location","author","authorYaml","edges","allMarkdownRemark","filter","edge","isDraft","node","frontmatter","draft","process","authorParticipated","forEach","element","id","totalCount","length","lang","config","title","name","content","bio","property","siteUrl","pathname","twitter","split","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","backgroundImage","profile_image","childImageSharp","fluid","src","SiteHeaderBackground","style","marginTop","AuthorProfileImage","avatar","alt","website","href","target","rel","facebook","SiteMain","PostFeed","map","key","fields","slug","post"],"mappings":"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","file":"2364e05d-af4993f35c9f407d04cd.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { FluidObject } from 'gatsby-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SiteArchiveHeader,\n  SiteNavMain,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ninterface AuthorTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    authorYaml: {\n      id: string;\n      website?: string;\n      twitter?: string;\n      facebook?: string;\n      location?: string;\n      profile_image?: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n      bio?: string;\n      avatar: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n  };\n}\n\nconst Author = ({ data, location }: AuthorTemplateProps) => {\n  const author = data.authorYaml;\n\n  const edges = data.allMarkdownRemark.edges.filter(edge => {\n    const isDraft = edge.node.frontmatter.draft !== true || process.env.NODE_ENV === 'development';\n\n    let authorParticipated = false;\n    if (edge.node.frontmatter.author) {\n      edge.node.frontmatter.author.forEach(element => {\n        if (element.id === author.id) {\n          authorParticipated = true;\n        }\n      });\n    }\n\n    return isDraft && authorParticipated;\n  });\n  const totalCount = edges.length;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {author.id} - {config.title}\n        </title>\n        <meta name=\"description\" content={author.bio} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        <meta property=\"article:publisher\" content=\"https://www.facebook.com/ghost\" />\n        <meta property=\"article:author\" content=\"https://www.facebook.com/ghost\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n\n          <ResponsiveHeaderBackground\n            backgroundImage={author.profile_image?.childImageSharp.fluid.src}\n            css={[outer, SiteHeaderBackground]}\n            className=\"site-header-background\"\n          >\n            <div css={inner}>\n              <SiteHeaderContent css={AuthorHeader} className=\"site-header-content author-header\">\n                <img\n                  style={{ marginTop: '8px' }}\n                  css={[AuthorProfileImage, AuthorProfileBioImage]}\n                  src={data.authorYaml.avatar.childImageSharp.fluid.src}\n                  alt={author.id}\n                />\n                <AuthHeaderContent className=\"author-header-content\">\n                  <SiteTitle className=\"site-title\">{author.id}</SiteTitle>\n                  {author.bio && <AuthorBio className=\"author-bio\">{author.bio}</AuthorBio>}\n                  <div css={AuthorMeta} className=\"author-meta\">\n                    {author.location && (\n                      <div className=\"author-location\" css={[HiddenMobile]}>\n                        {author.location}\n                      </div>\n                    )}\n                    <div className=\"author-stats\" css={[HiddenMobile]}>\n                      {totalCount > 1 && `${totalCount} posts`}\n                      {totalCount === 1 && '1 post'}\n                      {totalCount === 0 && 'No posts'}\n                    </div>\n                    {author.website && (\n                      <AuthorSocialLink className=\"author-social-link\">\n                        <AuthorSocialLinkAnchor\n                          href={author.website}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Website\n                        </AuthorSocialLinkAnchor>\n                      </AuthorSocialLink>\n                    )}\n                    {author.twitter && (\n                      <AuthorSocialLink className=\"author-social-link\">\n                        <AuthorSocialLinkAnchor\n                          href={`https://twitter.com/${author.twitter}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Twitter\n                        </AuthorSocialLinkAnchor>\n                      </AuthorSocialLink>\n                    )}\n                    {author.facebook && (\n                      <AuthorSocialLink className=\"author-social-link\">\n                        <AuthorSocialLinkAnchor\n                          href={`https://www.facebook.com/${author.facebook}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Facebook\n                        </AuthorSocialLinkAnchor>\n                      </AuthorSocialLink>\n                    )}\n                  </div>\n                </AuthHeaderContent>\n              </SiteHeaderContent>\n            </div>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => {\n                return <PostCard key={node.fields.slug} post={node} />;\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    authorYaml(id: { eq: $author }) {\n      id\n      website\n      twitter\n      bio\n      facebook\n      location\n      profile_image {\n        childImageSharp {\n          fluid(maxWidth: 3720) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      avatar {\n        childImageSharp {\n          fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 2000\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            excerpt\n            tags\n            date\n            draft\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fluid(quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorHeader = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 10vw 0 10px;\n  align-items: center;\n\n  @media (max-width: 500px) {\n    padding: 10px 0 0;\n\n    /* no image */\n    padding-bottom: 10px;\n  }\n`;\n\nconst AuthorMeta = css`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0 1px;\n  font-size: 1.2rem;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n  white-space: nowrap;\n\n  .author-location + .author-stats:before,\n  .author-stats + .author-social-link:before,\n  .author-social-link + .author-social-link:before {\n    content: '•';\n    display: inline-block;\n    margin: 0 12px;\n    color: #fff;\n    opacity: 0.6;\n  }\n\n  @media (max-width: 500px) {\n    margin-top: 8px;\n  }\n\n  @media (max-width: 700px) {\n    .author-location,\n    .author-stats,\n    .author-stats + .author-social-link:first-of-type:before {\n      display: none;\n    }\n  }\n`;\n\nconst AuthorSocialLink = styled.span`\n  display: inline-block;\n  margin: 0;\n  padding: 6px 0;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 6px 0 0;\n  max-width: 46em;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 400;\n  opacity: 0.8;\n`;\n\nconst AuthHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 5px 0 0 30px;\n  @media (max-width: 500px) {\n    align-items: center;\n    margin: 16px 0 0 0;\n  }\n`;\n\n// .site-header-content .author-profile-image\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: -4px 0 0;\n  width: 110px;\n  height: 110px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n  border-radius: 100%;\n`;\n\nconst AuthorSocialLinkAnchor = styled.a`\n  color: #fff;\n  font-weight: 600;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport default Author;\n"],"sourceRoot":""}